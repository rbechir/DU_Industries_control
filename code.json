{"slots":{"0":{"name":"button1","type":{"events":[],"methods":[]}},"1":{"name":"industry1","type":{"events":[],"methods":[]}},"2":{"name":"button2","type":{"events":[],"methods":[]}},"3":{"name":"industry2","type":{"events":[],"methods":[]}},"4":{"name":"button3","type":{"events":[],"methods":[]}},"5":{"name":"industry3","type":{"events":[],"methods":[]}},"6":{"name":"button4","type":{"events":[],"methods":[]}},"7":{"name":"industry4","type":{"events":[],"methods":[]}},"8":{"name":"screen","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"if industry1.getState() ~= 1 then\n    industry1.stop()\nelse\n    industry1.startMaintain(industry_1_maintain)\nend","filter":{"args":[],"signature":"onPressed()","slotKey":"0"},"key":"0"},{"code":"if industry2.getState() ~= 1 then\n    industry2.stop()\nelse\n    industry2.startMaintain(industry_2_maintain)\nend","filter":{"args":[],"signature":"onPressed()","slotKey":"2"},"key":"1"},{"code":"if industry3.getState() ~= 1 then\n    industry3.stop()\nelse\n    industry3.startMaintain(industry_3_maintain)\nend","filter":{"args":[],"signature":"onPressed()","slotKey":"4"},"key":"2"},{"code":"if industry4.getState() ~= 1 then\n    industry4.stop()\nelse\n    industry4.startMaintain(industry_4_maintain)\nend","filter":{"args":[],"signature":"onPressed()","slotKey":"6"},"key":"3"},{"code":"industry_1_1 = \"\" --export: Production de la 1e industrie (ligne 1)\nindustry_1_2 = \"\" --export: Production de la 1e industrie (ligne 2)\nindustry_1_maintain = 0 --export: Maintain de la 1e industrie\n\nindustry_2_1 = \"\" --export: Production de la 2e industrie (ligne 1)\nindustry_2_2 = \"\" --export: Production de la 2e industrie (ligne 2)\nindustry_2_maintain = 0 --export: Maintain de la 2e industrie\n\nindustry_3_1 = \"\" --export: Production de la 3e industrie (ligne 1)\nindustry_3_2 = \"\" --export: Production de la 3e industrie (ligne 2)\nindustry_3_maintain = 0 --export: Maintain de la 3e industrie\n\nindustry_4_1 = \"\" --export: Production de la 4e industrie (ligne 1)\nindustry_4_2 = \"\" --export: Production de la 4e industrie (ligne 2)\nindustry_4_maintain = 0 --export: Maintain de la 4e industrie\n\ncolor1 = {r=1, g=1, b=1}\ncolor2 = {r=1, g=1, b=1}\ncolor3 = {r=1, g=1, b=1}\ncolor4 = {r=1, g=1, b=1}\n\nunit.hideWidget()\n\nunit.setTimer(\"update\", 0.5)","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"4"},{"code":"if industry1 then color1 = getColor(industry1.getState()) end\nif industry2 then color2 = getColor(industry2.getState()) end\nif industry3 then color3 = getColor(industry3.getState()) end\nif industry4 then color4 = getColor(industry4.getState()) end\n\nscreen.setRenderScript([[\n    font = loadFont('Play', 50)\n    \n    realX, realY = getResolution()\n    ry, rx = realX, realY\n    \n    layer = createLayer()\n    setLayerOrigin(layer, realX / 2, realY / 2)\n    setLayerTranslation(layer, (realX - realY) / 2, realY / 3)\n    setLayerRotation(layer, 1.5708)\n    \n    setNextFillColor(layer, ]]..color1.r..[[, ]]..color1.g..[[, ]]..color1.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_1_1..[[\", 120, 110)\n    setNextFillColor(layer, ]]..color1.r..[[, ]]..color1.g..[[, ]]..color1.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_1_2..[[\", 120, 160)\n    \n    setNextFillColor(layer, ]]..color2.r..[[, ]]..color2.g..[[, ]]..color2.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_2_1..[[\", 120, 240)\n    setNextFillColor(layer, ]]..color2.r..[[, ]]..color2.g..[[, ]]..color2.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_2_2..[[\", 120, 290)\n    \n    setNextFillColor(layer, ]]..color3.r..[[, ]]..color3.g..[[, ]]..color3.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_3_1..[[\", 120, 370)\n    setNextFillColor(layer, ]]..color3.r..[[, ]]..color3.g..[[, ]]..color3.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_3_2..[[\", 120, 420)\n    \n    setNextFillColor(layer, ]]..color4.r..[[, ]]..color4.g..[[, ]]..color4.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_4_1..[[\", 120, 500)\n    setNextFillColor(layer, ]]..color4.r..[[, ]]..color4.g..[[, ]]..color4.b..[[, 0.8)\n    addText(layer, font, \"]]..industry_4_2..[[\", 120, 550)\n    \n    setNextFillColor(layer, 1, 0.6, 0, 0.8)\n    addText(layer, font, \"Missing ingredient\", 50, 640)\n    setNextFillColor(layer, 0.5, 0, 1, 0.8)\n    addText(layer, font, \"Missing schematic\", 50, 700)\n]])","filter":{"args":[{"value":"update"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"5"},{"code":"function getColor(state)\n    if state == 1 then\n        -- Stopped\n        color = {r=1, g=0, b=0}\n    elseif state == 2 or state == 4 or state == 6 then\n        -- Running / Output full / Pending\n        color = {r=0, g=1, b=0}\n    elseif state == 3 then\n        -- Missing ingredient\n        color = {r=1, g=0.6, b=0}\n    elseif state == 7 then\n        -- Missing schematic\n        color = {r=0.5, g=0, b=1}\n    else\n        -- No output container / Server error\n        color = {r=1, g=1, b=1}\n    end\n    return color\nend","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"6"}],"methods":[],"events":[]}
